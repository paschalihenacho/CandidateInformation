// <auto-generated />
using System;
using CandidateInformation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CandidateInformation.Migrations
{
    [DbContext(typeof(CandidateInformationContext))]
    [Migration("20190625202009_css")]
    partial class css
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CandidateInformation.Models.Qualifications", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CandidateID");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("endDate");

                    b.Property<string>("qualificationName");

                    b.Property<string>("qualificationType");

                    b.Property<DateTime>("startDate");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("Qualifications");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Qualifications");
                });

            modelBuilder.Entity("CandidateInformation.Models.Candidate", b =>
                {
                    b.HasBaseType("CandidateInformation.Models.Qualifications");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("phoneNumber");

                    b.Property<string>("zipCode");

                    b.HasDiscriminator().HasValue("Candidate");
                });

            modelBuilder.Entity("CandidateInformation.Models.Qualifications", b =>
                {
                    b.HasOne("CandidateInformation.Models.Candidate")
                        .WithMany("CandidateQualification")
                        .HasForeignKey("CandidateID");
                });
#pragma warning restore 612, 618
        }
    }
}
